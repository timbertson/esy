### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    opam-commit = "c10b78b74ebb493997e96aedcd09b99872ecd02a";
    pkgs = self.pkgs;
    repo = (pkgs.fetchFromGitHub) 
    {
      owner = "ocaml";
      repo = "opam-repository";
      rev = opam-commit;
      sha256 = "046cxr8mnx21cih01hhprv0iy8kms76pll8cgzp4whi97vzj3b6l";
    };
    repoPath = self.repoPath;
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.08.1";
  opam-commit = opam-commit;
  selection = 
  {
    angstrom = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:13b9bj2jgzw51nj9x1nc89ah7j363f11j2511h5kzjrkn1l21hg2";
        package = "packages/angstrom/angstrom.0.12.1";
      };
      pname = "angstrom";
      src = pkgs.fetchurl 
      {
        sha256 = "1av00492pzbn2x96870f5bkimp45jx70pngzmpp1wgn44v9sndgv";
        url = "https://github.com/inhabitedtype/angstrom/archive/0.12.1.tar.gz";
      };
      version = "0.12.1";
    };
    astring = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0y7bxwdmjwxzad2fhfsvzj3idw4sw4z2zb3n8yr4fkla9s9hbma9";
        package = "packages/astring/astring.0.8.3";
      };
      pname = "astring";
      src = pkgs.fetchurl 
      {
        sha256 = "0ixjwc3plrljvj24za3l9gy0w30lsbggp8yh02lwrzw61ls4cri0";
        url = "http://erratique.ch/software/astring/releases/astring-0.8.3.tbz";
      };
      version = "0.8.3";
    };
    base = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1lssq6wmcnagvr7z3mfyqqvnw7lq9vax10i1bmsivszflp5pd277";
        package = "packages/base/base.v0.13.0";
      };
      pname = "base";
      src = pkgs.fetchurl 
      {
        sha256 = "03sfvg40im2bfvnrqc14da2k2kjzs4yf797g26iyly7iahp9m7xm";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/base-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    base-bigarray = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1hgfwxh4vdv21m2a4g506y27pcv912v67qi4svrn53rgc43ckv6b";
        package = "packages/base-bigarray/base-bigarray.base";
      };
      pname = "base-bigarray";
      src = null;
      version = "base";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    bigarray-compat = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0lbmlg7kqy0bvca7v5qib69ayiryy5hlkzhzfg7qwq9n29aygc97";
        package = "packages/bigarray-compat/bigarray-compat.1.0.0";
      };
      pname = "bigarray-compat";
      src = pkgs.fetchurl 
      {
        sha256 = "1bpmmnxb1yx72aqlbdaqfl18rgz1cq9cf6cqvnfl88mz5dfr4x0d";
        url = "https://github.com/mirage/bigarray-compat/archive/v1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    bigstringaf = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        mirage-xen-posix = selection.mirage-xen-posix or null;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vl1450kc7ypcfbgxpp4kdny16mv0i3fmcyvik08h0fa02rvf6wi";
        package = "packages/bigstringaf/bigstringaf.0.6.0";
      };
      pname = "bigstringaf";
      src = pkgs.fetchurl 
      {
        sha256 = "1nna3fmq7l0csdmwkghhyfknfxrqq2kmc73vrckrx930qbj6mx6c";
        url = "https://github.com/inhabitedtype/bigstringaf/archive/0.6.0.tar.gz";
      };
      version = "0.6.0";
    };
    biniou = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:12ykyqa9piw1gny1flsi43qph411alzsm3rr8cgs5ap4drk3xbrd";
        package = "packages/biniou/biniou.1.2.1";
      };
      pname = "biniou";
      src = pkgs.fetchurl 
      {
        sha256 = "0da3m0g0dhl02jfynrbysjh070xk2z6rxcx34xnqx6ljn5l6qm1m";
        url = "https://github.com/mjambon/biniou/releases/download/1.2.1/biniou-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    bos = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        base-unix = selection.base-unix;
        fmt = selection.fmt;
        fpath = selection.fpath;
        logs = selection.logs;
        mtime = selection.mtime or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        rresult = selection.rresult;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:076a3ppiizh20fj0mg0xsprshzpdv3j1avfpsxpzaxzh72fchpch";
        package = "packages/bos/bos.0.2.0";
      };
      pname = "bos";
      src = pkgs.fetchurl 
      {
        sha256 = "1s10iqx8rgnxr5n93lf4blwirjf8nlm272yg5sipr7lsr35v49wc";
        url = "http://erratique.ch/software/bos/releases/bos-0.2.0.tbz";
      };
      version = "0.2.0";
    };
    camomile = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0r38mkgbfbbma0s6ccyqxmn27jby7jpfqjadblmv6wkd0g4kx588";
        package = "packages/camomile/camomile.1.0.2";
      };
      pname = "camomile";
      src = pkgs.fetchurl 
      {
        sha256 = "0chn7ldqb3wyf95yhmsxxq65cif56smgz1mhhc7m0dpwmyq1k97h";
        url = "https://github.com/yoriyuki/Camomile/releases/download/1.0.2/camomile-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    charInfo_width = 
    {
      opamInputs = 
      {
        camomile = selection.camomile;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_expect = selection.ppx_expect or null;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:07fxsfkb70bxckh8pxshcrqpcwlnlcsif3mmf2wmr3gi3nwkkssn";
        package = "packages/charInfo_width/charInfo_width.1.1.0";
      };
      pname = "charInfo_width";
      src = pkgs.fetchurl 
      {
        sha256 = "00bv4p1yqs8y0z4z07wd9w9yyv669dikp9b04dcjbwpiy2wy0086";
        url = "https://bitbucket.org/zandoye/charinfo_width/get/1.1.0.tar.gz";
      };
      version = "1.1.0";
    };
    cmdliner = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:05qlm4yp6124w2z10dpdchldfrmgmcr6h31rnxp8qs8mk0xzx48z";
        package = "packages/cmdliner/cmdliner.1.0.4";
      };
      pname = "cmdliner";
      src = pkgs.fetchurl 
      {
        sha256 = "1h04q0zkasd0mw64ggh4y58lgzkhg6yhzy60lab8k8zq9ba96ajw";
        url = "http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.4.tbz";
      };
      version = "1.0.4";
    };
    conf-libcurl = 
    {
      buildInputs = [ (pkgs.curl) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:040p9z42jlk9zwrg7iw6f3jvz16kkm2hgqqb4inflhaljzb8jiky";
        package = "packages/conf-libcurl/conf-libcurl.1";
      };
      pname = "conf-libcurl";
      src = null;
      version = "1";
    };
    conf-m4 = 
    {
      buildInputs = [ (pkgs.m4) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jlhg718lz35jyr5w0sgvg5ycplhnd8653rc4980yci8p3z1vlxs";
        package = "packages/conf-m4/conf-m4.1";
      };
      pname = "conf-m4";
      src = null;
      version = "1";
    };
    conf-perl = 
    {
      buildInputs = [ (pkgs.perl) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:090hjg76q1q651vwh38k0jmmr8mp465m7bfgnw5aqxpv1kxb4f12";
        package = "packages/conf-perl/conf-perl.1";
      };
      pname = "conf-perl";
      src = null;
      version = "1";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hdl429cpb4bg9gc07rxs14p7d3r3nfi3vw6s38c6xhf412nl611";
        package = "packages/cppo/cppo.1.6.6";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "185q0x54id7pfc6rkbjscav8sjkrg78fz65rgfw7b4bqlyb2j9z7";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.6/cppo-v1.6.6.tbz";
      };
      version = "1.6.6";
    };
    cudf = 
    {
      opamInputs = 
      {
        conf-perl = selection.conf-perl;
        extlib = selection.extlib or null;
        extlib-compat = selection.extlib-compat or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:18fjb704gmr1vzm6c690qffndszrf9xcl2hpbqx9znh8iv402w09";
        package = "packages/cudf/cudf.0.9";
      };
      pname = "cudf";
      src = pkgs.fetchurl 
      {
        sha256 = "0771lwljqwwn3cryl0plny5a5dyyrj4z6bw66ha5n8yfbpcy8clr";
        url = "https://gforge.inria.fr/frs/download.php/36602/cudf-0.9.tar.gz";
      };
      version = "0.9";
    };
    dose3 = 
    {
      opamInputs = 
      {
        conf-perl = selection.conf-perl;
        cppo = selection.cppo;
        cudf = selection.cudf;
        extlib = selection.extlib or null;
        extlib-compat = selection.extlib-compat or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlgraph = selection.ocamlgraph;
        re = selection.re;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1rj0qwafnb4nyfz99fb54hg1h3hp0l9n8mkwc5pcf2lbw0l6v7pg";
        package = "packages/dose3/dose3.5.0.1";
      };
      pname = "dose3";
      src = pkgs.fetchurl 
      {
        sha256 = "00yvyfm4j423zqndvgc1ycnmiffaa2l9ab40cyg23pf51qmzk2jm";
        url = "https://gforge.inria.fr/frs/download.php/file/36063/dose3-5.0.1.tar.gz";
      };
      version = "5.0.1";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0zmid09nfxpgv5ggc1nj8kk3f83vdd7g1kpgf9ny0pxv8ax2h773";
        package = "packages/dune/dune.2.1.3";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "1cxf7g2kld7jmk6m47fdvmfdyqy1di517qiph55jrq7sm5akp3hy";
        url = "https://github.com/ocaml/dune/releases/download/2.1.3/dune-2.1.3.tbz";
      };
      version = "2.1.3";
    };
    dune-configurator = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-private-libs = selection.dune-private-libs;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1darxfjip6i9zqd64n4dldv7z8nqyxxqs622zmqnp9vsdgxxa9cv";
        package = "packages/dune-configurator/dune-configurator.2.1.3";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "1cxf7g2kld7jmk6m47fdvmfdyqy1di517qiph55jrq7sm5akp3hy";
        url = "https://github.com/ocaml/dune/releases/download/2.1.3/dune-2.1.3.tbz";
      };
      version = "2.1.3";
    };
    dune-private-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:14apgsbqpkl9ax34xy4sshylyvjlfj0069hvjqxvm809dvgcqwb3";
        package = "packages/dune-private-libs/dune-private-libs.2.1.3";
      };
      pname = "dune-private-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "1cxf7g2kld7jmk6m47fdvmfdyqy1di517qiph55jrq7sm5akp3hy";
        url = "https://github.com/ocaml/dune/releases/download/2.1.3/dune-2.1.3.tbz";
      };
      version = "2.1.3";
    };
    easy-format = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1zahpwp0021xygbwpygrrwa5g65qq6dfqngckb3823ybc6l79lva";
        package = "packages/easy-format/easy-format.1.3.2";
      };
      pname = "easy-format";
      src = pkgs.fetchurl 
      {
        sha256 = "09hrikx310pac2sb6jzaa7k6fmiznnmhdsqij1gawdymhawc4h1l";
        url = "https://github.com/mjambon/easy-format/releases/download/1.3.2/easy-format-1.3.2.tbz";
      };
      version = "1.3.2";
    };
    esy = 
    {
      buildInputs = [ (pkgs.nodejs-12_x) ];
      opamInputs = 
      {
        angstrom = selection.angstrom;
        bos = selection.bos;
        cmdliner = selection.cmdliner;
        cudf = selection.cudf;
        dose3 = selection.dose3;
        dune = selection.dune;
        fmt = selection.fmt;
        fpath = selection.fpath;
        lambda-term = selection.lambda-term;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        menhir = selection.menhir;
        opam-core = selection.opam-core;
        opam-file-format = selection.opam-file-format;
        opam-format = selection.opam-format;
        opam-state = selection.opam-state;
        ppx_deriving = selection.ppx_deriving;
        ppx_deriving_yojson = selection.ppx_deriving_yojson;
        ppx_expect = selection.ppx_expect;
        ppx_inline_test = selection.ppx_inline_test;
        ppx_let = selection.ppx_let;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
        reason = selection.reason;
        yojson = selection.yojson;
      };
      opamSrc = "esy.opam";
      pname = "esy";
      src = self.directSrc "esy";
      version = "development";
    };
    extlib = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:080965icazd4m1np7ai9n6sdxcwfn64cn685x3vw3fi913harwps";
        package = "packages/extlib/extlib.1.7.6";
      };
      pname = "extlib";
      src = pkgs.fetchurl 
      {
        sha256 = "0wfs20v1yj5apdbj7214wdsr17ayh0qqq7ihidndvc8nmmwfa1dz";
        url = "https://ygrek.org.ua/p/release/ocaml-extlib/extlib-1.7.6.tar.gz";
      };
      version = "1.7.6";
    };
    fieldslib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1abs881bnis5xj93jv7xg34cyph5jj683g2apas4sgi8k1wkg1iz";
        package = "packages/fieldslib/fieldslib.v0.13.0";
      };
      pname = "fieldslib";
      src = pkgs.fetchurl 
      {
        sha256 = "07bpb1bi5rlim7lfkfd5m2k7n222grslbzh9hjpy7dhq7nm8fy0p";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/fieldslib-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    fileutils = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1cv6csv1i994i4h9z37q4qz0jj3vxg3rrmvlh35bhd7p2acby4id";
        package = "packages/fileutils/fileutils.0.6.1";
      };
      pname = "fileutils";
      src = pkgs.fetchurl 
      {
        sha256 = "0p9plla8m1706zmnlsbf0hsndqy50riblw8f7shy26z0p07592j5";
        url = "https://github.com/gildor478/ocaml-fileutils/releases/download/v0.6.1/fileutils-v0.6.1.tbz";
      };
      version = "0.6.1";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jv1qj26idvi2nazvna4aaclp9wzlzwmmg57n5cx2f9ia87qh267";
        package = "packages/fmt/fmt.0.8.8";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "1iy0rwknd302mr15328g805k210xyigxbija6fzqqfzyb43azvk4";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.8.tbz";
      };
      version = "0.8.8";
    };
    fpath = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:02mwg1qqjia4jdmp65zhyxssn4rxb6a22s4g3pjh3p5z9v900pja";
        package = "packages/fpath/fpath.0.7.2";
      };
      pname = "fpath";
      src = pkgs.fetchurl 
      {
        sha256 = "1hr05d8bpqmqcfdavn4rjk9rxr7v2zl84866f5knjifrm60sxqic";
        url = "http://erratique.ch/software/fpath/releases/fpath-0.7.2.tbz";
      };
      version = "0.7.2";
    };
    lambda-term = 
    {
      opamInputs = 
      {
        camomile = selection.camomile;
        dune = selection.dune;
        lwt = selection.lwt;
        lwt_log = selection.lwt_log;
        lwt_react = selection.lwt_react;
        ocaml = selection.ocaml;
        react = selection.react;
        zed = selection.zed;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:03bmz5srw54f0y4hc94bf4zd4nwdjjllf26hfn304fh48gdh3y9l";
        package = "packages/lambda-term/lambda-term.2.0.3";
      };
      pname = "lambda-term";
      src = pkgs.fetchurl 
      {
        sha256 = "1n1b3ffj41a1lm2315hh870yj9h8gg8g9jcxha6dr3xx8r84np3v";
        url = "https://github.com/ocaml-community/lambda-term/releases/download/2.0.3/lambda-term-2.0.3.tbz";
      };
      version = "2.0.3";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        mtime = selection.mtime or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    lwt = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:07pr0s7av34cgj18bszkxkgpfg3a53hqvwcw74s1cf953hxpkdj9";
        package = "packages/lwt/lwt.4.5.0";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "11k1g118wq093zc5a93dnvdzmp09xvg0k7ayjwnq01div1f88zg0";
        url = "https://github.com/ocsigen/lwt/archive/4.5.0.tar.gz";
      };
      version = "4.5.0";
    };
    lwt_log = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1b4qvc8hazj2n3shdpdi4b5575sgr3iz5zs06iajc6ph8k56hk76";
        package = "packages/lwt_log/lwt_log.1.1.1";
      };
      pname = "lwt_log";
      src = pkgs.fetchurl 
      {
        sha256 = "0gszc8nvk2hpfq47plb36qahlnyfq28sa9mhicnf6mg5c7n1kyql";
        url = "https://github.com/aantron/lwt_log/archive/1.1.1.tar.gz";
      };
      version = "1.1.1";
    };
    lwt_ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:04kq2kp6q63zpqnm6pg8rax2w7xci13756rhl33f326fb8j44p8l";
        package = "packages/lwt_ppx/lwt_ppx.2.0.0";
      };
      pname = "lwt_ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "0rqmjzdai1cvq0sqfmpiisvqrfgi7dn4ygs7h0mlr8xffp2gnqba";
        url = "https://github.com/ocsigen/lwt/archive/5.0.0.tar.gz";
      };
      version = "2.0.0";
    };
    lwt_react = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0l0sqax959gv3649z1vqwf94jvq0bykwydrdjxzk0gjj0nlchfar";
        package = "packages/lwt_react/lwt_react.1.1.3";
      };
      pname = "lwt_react";
      src = pkgs.fetchurl 
      {
        sha256 = "0gfj6bgv6vp82mg8kw1g7s2h9g08gs9m7i4w1ffw3l77b8pzd6k9";
        url = "https://github.com/ocsigen/lwt/archive/4.3.0.tar.gz";
      };
      version = "1.1.3";
    };
    mccs = 
    {
      opamInputs = 
      {
        cudf = selection.cudf;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0q3q3xmxb6rq3rcngjdvzrb4npx3sv9kh4x8kk0viv6rrzzn897a";
        package = "packages/mccs/mccs.1.1+11";
      };
      pname = "mccs";
      src = pkgs.fetchurl 
      {
        sha256 = "0mswapf37rav8nvvbjc4c7c7wnl6qwgd3c5v0nfifmr910qygz72";
        url = "https://github.com/AltGr/ocaml-mccs/archive/1.1+11.tar.gz";
      };
      version = "1.1-11";
    };
    menhir = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        menhirLib = selection.menhirLib;
        menhirSdk = selection.menhirSdk;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:05hmjgw7k3kf8n1zjb7f48np4wi83azfk2azx9lysrsgflswdhha";
        package = "packages/menhir/menhir.20200123";
      };
      pname = "menhir";
      src = pkgs.fetchurl 
      {
        sha256 = "1x19mplzk5kgqgpdggsgl4hfg9rs7wzybwaf7fj7x9qxvqmnndfv";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20200123/archive.tar.gz";
      };
      version = "20200123";
    };
    menhirLib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:03sbfnifc551ixi7bf04ablrrdy67604jm5ywy3qkf8b723mr9hs";
        package = "packages/menhirLib/menhirLib.20200123";
      };
      pname = "menhirLib";
      src = pkgs.fetchurl 
      {
        sha256 = "1x19mplzk5kgqgpdggsgl4hfg9rs7wzybwaf7fj7x9qxvqmnndfv";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20200123/archive.tar.gz";
      };
      version = "20200123";
    };
    menhirSdk = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0j814fy8dj3j3ri507lhxmi8x7jq4gqnpdrjg4hhncdgn70dipsp";
        package = "packages/menhirSdk/menhirSdk.20200123";
      };
      pname = "menhirSdk";
      src = pkgs.fetchurl 
      {
        sha256 = "1x19mplzk5kgqgpdggsgl4hfg9rs7wzybwaf7fj7x9qxvqmnndfv";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20200123/archive.tar.gz";
      };
      version = "20200123";
    };
    merlin-extend = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1s5x0ymzf7ajp6fhfwvf37gcayrkcwn93dahayfxacrfhdsvc7d5";
        package = "packages/merlin-extend/merlin-extend.0.5";
      };
      pname = "merlin-extend";
      src = pkgs.fetchurl 
      {
        sha256 = "09y23rhf9p34psjnkvy3wfsf7dm4d9xbz6kqniz85m67c31khfna";
        url = "https://github.com/let-def/merlin-extend/releases/download/v0.5/merlin-extend-v0.5.tbz";
      };
      version = "0.5";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1f2v07fzx7rg0lc8pzs1s24vp49y0jyfxf98b9z57giik28dafgp";
        package = "packages/ocaml/ocaml.4.08.1";
      };
      pname = "ocaml";
      src = null;
      version = "4.08.1";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1gh1552rac1r3zzw1b7z0776walapin07bk0bpg8j561b4kwcb46";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.08.1";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "11fvsm861lr73lk181gl5iczprp8d83fvgc1q6dx8gxqhzad6gmm";
        url = "https://github.com/ocaml/ocaml/archive/4.08.1.tar.gz";
      };
      version = "4.08.1";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:13l8hnv1xclgpayfv8w827ly7il87j4qll7x15sbdrqk980c3jyg";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.1";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "014shj6g10xmclfps22igkiij5jysn8p6lv75h0s4vzjj9wj23yj";
        url = "https://github.com/janestreet/ocaml-compiler-libs/archive/v0.12.1.tar.gz";
      };
      version = "v0.12.1";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0g5s0yysgqdrbgx7vyh56fhx59xypw6hdwlcbzbqcgvj4zp4yy0c";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_derivers = selection.ppx_derivers;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:16440q0icr8w12d8cf7qagr0s5mjqgsvvvzm2bam28d8w9ibx3p4";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.1.5.0";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "1h736jsjx2l7d4i2w9wjzplw4k4f3jwbdrbdcri2fmb1jnf6fmkz";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.5.0/ocaml-migrate-parsetree-v1.5.0.tbz";
      };
      version = "1.5.0";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        conf-m4 = selection.conf-m4;
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:04z3rq1y20wfzmwvjm9wlg89cqqs8n37inhbwp4x2dsqbn0hqd81";
        package = "packages/ocamlfind/ocamlfind.1.8.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "00s3sfb02pnjmkax25pcnljcnhcggiliccfz69a72ic7gsjwz1cf";
        url = "http://download.camlcity.org/download/findlib-1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    ocamlgraph = 
    {
      opamInputs = 
      {
        conf-gnomecanvas = selection.conf-gnomecanvas or null;
        lablgtk = selection.lablgtk or null;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0p2aazb9plhzh5m8yyjr8a2im7w8gkbgmn9x8dvj01fz9rf4m9v7";
        package = "packages/ocamlgraph/ocamlgraph.1.8.8";
      };
      pname = "ocamlgraph";
      src = pkgs.fetchurl 
      {
        sha256 = "0m9g16wrrr86gw4fz2fazrh8nkqms0n863w7ndcvrmyafgxvxsnr";
        url = "http://ocamlgraph.lri.fr/download/ocamlgraph-1.8.8.tar.gz";
      };
      version = "1.8.8";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nb8z88xhnbz324q14ydlbw8pnrsk5qr3lw34hv0i7bhd9hgk8y9";
        package = "packages/ocplib-endian/ocplib-endian.1.0";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0hwj09rnzjs0m0kazz5h2mgs6p95j0zlga8cda5srnzqmzhniwkn";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.0.tar.gz";
      };
      version = "1.0";
    };
    ocurl = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conf-libcurl = selection.conf-libcurl;
        lwt = selection.lwt or null;
        lwt_ppx = selection.lwt_ppx or null;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1ff6s3gl78nrjyvvmc2i3lwa0igg04sh8648jhf6jgbfk2k2ydj2";
        package = "packages/ocurl/ocurl.0.9.0";
      };
      pname = "ocurl";
      src = pkgs.fetchurl 
      {
        sha256 = "0v5qzfazaynjv1xy3ds2z5iz0np5mz8g831l91l1mrqz6fr1ah0f";
        url = "https://ygrek.org.ua/p/release/ocurl/ocurl-0.9.0.tar.gz";
      };
      version = "0.9.0";
    };
    opam-core = 
    {
      opamInputs = 
      {
        base-bigarray = selection.base-bigarray;
        base-unix = selection.base-unix;
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocamlgraph = selection.ocamlgraph;
        re = selection.re;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1y9gbjjx4zjb4vf610zq66fgzcp9bql8y63dz3i317wjwvr2jcgs";
        package = "packages/opam-core/opam-core.2.0.6";
      };
      pname = "opam-core";
      src = pkgs.fetchurl 
      {
        sha256 = "0n074cvfqqh39raklr9aanzdzcslr0az9rp9lyp63yqzgd4bisdz";
        url = "https://github.com/ocaml/opam/archive/2.0.6.tar.gz";
      };
      version = "2.0.6";
    };
    opam-file-format = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1fzr2qw0p4bx5vh9j84kgxkw3y15y0d95v2bnxbi81fqccb3ix1k";
        package = "packages/opam-file-format/opam-file-format.2.0.0";
      };
      pname = "opam-file-format";
      src = pkgs.fetchurl 
      {
        sha256 = "0cjw69r7iilidi7b6arr92kjnjspchvwnmwr1b1gyaxqxpr2s98m";
        url = "https://github.com/ocaml/opam-file-format/archive/2.0.0.tar.gz";
      };
      version = "2.0.0";
    };
    opam-format = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        opam-core = selection.opam-core;
        opam-file-format = selection.opam-file-format;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0fw283i3iwvaca1vff5sm0ql44v2lrqcz2gnsxwan7rx5gb236x0";
        package = "packages/opam-format/opam-format.2.0.6";
      };
      pname = "opam-format";
      src = pkgs.fetchurl 
      {
        sha256 = "0n074cvfqqh39raklr9aanzdzcslr0az9rp9lyp63yqzgd4bisdz";
        url = "https://github.com/ocaml/opam/archive/2.0.6.tar.gz";
      };
      version = "2.0.6";
    };
    opam-repository = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        opam-format = selection.opam-format;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0y2d4h3kgw50xlwl28sxn7kvg841pw8x19njxang1yxmrbsm4ifq";
        package = "packages/opam-repository/opam-repository.2.0.6";
      };
      pname = "opam-repository";
      src = pkgs.fetchurl 
      {
        sha256 = "0n074cvfqqh39raklr9aanzdzcslr0az9rp9lyp63yqzgd4bisdz";
        url = "https://github.com/ocaml/opam/archive/2.0.6.tar.gz";
      };
      version = "2.0.6";
    };
    opam-solver = 
    {
      opamInputs = 
      {
        cudf = selection.cudf;
        dose3 = selection.dose3;
        dune = selection.dune;
        mccs = selection.mccs;
        ocaml = selection.ocaml;
        opam-format = selection.opam-format;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:05gvgl1b02pmfwyj5bnzikpkwacb5mqvirx999pzz7giiwxig1vy";
        package = "packages/opam-solver/opam-solver.2.0.6";
      };
      pname = "opam-solver";
      src = pkgs.fetchurl 
      {
        sha256 = "0n074cvfqqh39raklr9aanzdzcslr0az9rp9lyp63yqzgd4bisdz";
        url = "https://github.com/ocaml/opam/archive/2.0.6.tar.gz";
      };
      version = "2.0.6";
    };
    opam-state = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        opam-repository = selection.opam-repository;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:07im10188ksyq2gxbrkmkng673iyw8k60cmgm33fyvgna2w1vjzn";
        package = "packages/opam-state/opam-state.2.0.6";
      };
      pname = "opam-state";
      src = pkgs.fetchurl 
      {
        sha256 = "0n074cvfqqh39raklr9aanzdzcslr0az9rp9lyp63yqzgd4bisdz";
        url = "https://github.com/ocaml/opam/archive/2.0.6.tar.gz";
      };
      version = "2.0.6";
    };
    opam2nix = 
    {
      buildInputs = [ (pkgs.gup) ];
      opamInputs = 
      {
        cudf = selection.cudf;
        dune = selection.dune;
        fileutils = selection.fileutils;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        ocamlfind = selection.ocamlfind;
        ocurl = selection.ocurl;
        opam-solver = selection.opam-solver;
        opam-state = selection.opam-state;
      };
      opamSrc = "opam2nix.opam";
      pname = "opam2nix";
      src = self.directSrc "opam2nix";
      version = "development";
    };
    ppx_assert = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_cold = selection.ppx_cold;
        ppx_compare = selection.ppx_compare;
        ppx_here = selection.ppx_here;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1qq4qbapfpx8qrs41h28if4gy56pp3a178rw3zg9fw6kkmq4akdp";
        package = "packages/ppx_assert/ppx_assert.v0.13.0";
      };
      pname = "ppx_assert";
      src = pkgs.fetchurl 
      {
        sha256 = "13xhq75bfj23acvx74dg21vq8vgkqaxlamz4k07v8z5jjdkspafj";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_assert-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_cold = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0cwy07hdf4nfjz2rxlpyzck5kbw184icbmrvn2d8bqa1zb4hkbx4";
        package = "packages/ppx_cold/ppx_cold.v0.13.0";
      };
      pname = "ppx_cold";
      src = pkgs.fetchurl 
      {
        sha256 = "1jh2c7s1bxy8r9xa81bvchnfbmnc5r7kdclv8314sbqg6wspd0ni";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_cold-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_compare = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0p31cpdkanqc8cb0y3r253ivp8h083clb6q0g4v331dfa93g5b9n";
        package = "packages/ppx_compare/ppx_compare.v0.13.0";
      };
      pname = "ppx_compare";
      src = pkgs.fetchurl 
      {
        sha256 = "1h25qw93a4xhqi0cs8axivnimcprdkkw46cix09aldbfi6fw955j";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_compare-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_custom_printf = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1sd8a5wcjrz6a214x4vyyxhynz7gcqqd3lw0yyw3bhzs67lcmjas";
        package = "packages/ppx_custom_printf/ppx_custom_printf.v0.13.0";
      };
      pname = "ppx_custom_printf";
      src = pkgs.fetchurl 
      {
        sha256 = "17rn0qkh7hhz3s57ya4dbc4m64cb1w2lg3vqi87kf8c0vzq0jnq6";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_custom_printf-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_deriving = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ounit = selection.ounit or null;
        ppx_derivers = selection.ppx_derivers;
        ppx_tools = selection.ppx_tools;
        ppxfind = selection.ppxfind;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0c50srrs1figgrsbzyjm36kqk6cp8nicmigxa9123zkxizzp3ics";
        package = "packages/ppx_deriving/ppx_deriving.4.4";
      };
      pname = "ppx_deriving";
      src = pkgs.fetchurl 
      {
        sha256 = "0d6cdgk6kdi64l4q4l6hs2zln5js76q0yn94yriz38b5rgs5mn62";
        url = "https://github.com/ocaml-ppx/ppx_deriving/archive/v4.4.tar.gz";
      };
      version = "4.4";
    };
    ppx_deriving_yojson = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_deriving = selection.ppx_deriving;
        ppx_tools = selection.ppx_tools;
        ppxfind = selection.ppxfind;
        result = selection.result;
        yojson = selection.yojson;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1qya5lycvrpbm7din9vjldfawrl8gig0jxx4cmn8b06flac71wca";
        package = "packages/ppx_deriving_yojson/ppx_deriving_yojson.3.5.1";
      };
      pname = "ppx_deriving_yojson";
      src = pkgs.fetchurl 
      {
        sha256 = "1549arsx6p6zp1aca6y8cs9gxa9jwfjabk7dp6zf43ig7xkrrzmf";
        url = "https://github.com/ocaml-ppx/ppx_deriving_yojson/archive/v3.5.1.tar.gz";
      };
      version = "3.5.1";
    };
    ppx_expect = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_assert = selection.ppx_assert;
        ppx_compare = selection.ppx_compare;
        ppx_custom_printf = selection.ppx_custom_printf;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_here = selection.ppx_here;
        ppx_inline_test = selection.ppx_inline_test;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppx_variants_conv = selection.ppx_variants_conv;
        ppxlib = selection.ppxlib;
        re = selection.re;
        stdio = selection.stdio;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0dkdsf7m4c415pqddlnm16p5y6qnl7vzvyxmpjlg74nj94jdfglh";
        package = "packages/ppx_expect/ppx_expect.v0.13.0";
      };
      pname = "ppx_expect";
      src = pkgs.fetchurl 
      {
        sha256 = "0hmqipd2ij7bb5kva0b5g45zsjkjpqdx1pi91gplhp8mvxbxp9qn";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_expect-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_fields_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:15piy3665gkqvingvphjm51hvskqxhfx1yazrl5qik48y4gwfcf2";
        package = "packages/ppx_fields_conv/ppx_fields_conv.v0.13.0";
      };
      pname = "ppx_fields_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "03j9vmbs60ivga1w2qcnjn2d149yzkns2q341ni3qqa570lcwzsj";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_fields_conv-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_here = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0kszkla2c5kqli2b19zjix3282g7935wx9sxigbph0c4li4rriyq";
        package = "packages/ppx_here/ppx_here.v0.13.0";
      };
      pname = "ppx_here";
      src = pkgs.fetchurl 
      {
        sha256 = "003l1ljzqcp5958fs8sd6r24r6b9s4mgxkfl5292c2nkmi2kg258";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_here-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_inline_test = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1bsq7n6yxl9n7vqhy84hls8i5vdx9lwh8k3ryzmdnlp9zv9z4ia8";
        package = "packages/ppx_inline_test/ppx_inline_test.v0.13.0";
      };
      pname = "ppx_inline_test";
      src = pkgs.fetchurl 
      {
        sha256 = "1g7nsgz9djkz3dy5snpgspmzj31rf679wqkpzhyhwwbacphkf2fp";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_inline_test-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_let = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:19v7r5ykprsq21j6y3wc47fsiaf1cxjm17bbl19czxhhsz1y2845";
        package = "packages/ppx_let/ppx_let.v0.13.0";
      };
      pname = "ppx_let";
      src = pkgs.fetchurl 
      {
        sha256 = "03i52nff0c441ng7bv3w457jj1gk7q2478zx8vbhrpdag607x9v3";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_let-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_sexp_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0vd5bins4dhwnp8w552vafshsqj1gm9hna5y0xxpf9bqhkvr1426";
        package = "packages/ppx_sexp_conv/ppx_sexp_conv.v0.13.0";
      };
      pname = "ppx_sexp_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0yppy47zjn8nb73lnk4d3lhpmcia1rr8bka56n32sla4yz1y148n";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_sexp_conv-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_tools = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0f2jw24p3a4yy07snc3q612y8kgd97gbf47b609886m4b79l268v";
        package = "packages/ppx_tools/ppx_tools.5.3+4.08.0";
      };
      pname = "ppx_tools";
      src = pkgs.fetchurl 
      {
        sha256 = "0i9nh0rs1h6z4jnhahppbdm5d5q47w4xs6hhc8dy6sbjh7rf8fl4";
        url = "https://github.com/ocaml-ppx/ppx_tools/archive/5.3+4.08.0.tar.gz";
      };
      version = "5.3-4.08.0";
    };
    ppx_tools_versioned = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1rg0yfsacna7zadxin9s1qkaga940kvsffaxmdvn4y0f923xnpcn";
        package = "packages/ppx_tools_versioned/ppx_tools_versioned.5.2.3";
      };
      pname = "ppx_tools_versioned";
      src = pkgs.fetchurl 
      {
        sha256 = "11ac52fg8bbsgsqxinj1qxm7gp9j52d4fal3696yxsrb6hwcfcpi";
        url = "https://github.com/ocaml-ppx/ppx_tools_versioned/archive/5.2.3.tar.gz";
      };
      version = "5.2.3";
    };
    ppx_variants_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        variantslib = selection.variantslib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0i4pnmh4x8p38g7g764bibyrc7f4dy9b5brdcynl0m7s7csgg1vw";
        package = "packages/ppx_variants_conv/ppx_variants_conv.v0.13.0";
      };
      pname = "ppx_variants_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "084qqrphwdlvgvygq1h8z0agbs2w7ws46z2im2l2zi09wd9bnd3y";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_variants_conv-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppxfind = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0zicjnj2p2g8pyx9c9gdh01cfm9v1vi72kmb2m8qh7yx4wf9srn0";
        package = "packages/ppxfind/ppxfind.1.3";
      };
      pname = "ppxfind";
      src = pkgs.fetchurl 
      {
        sha256 = "1r4jp0516378js62ss50a9s8ql2pm8lfdd3mnk214hp7s0kb17fl";
        url = "https://github.com/diml/ppxfind/releases/download/1.3/ppxfind-1.3.tbz";
      };
      version = "1.3";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        base = selection.base;
        cinaps = selection.cinaps or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind or null;
        ppx_derivers = selection.ppx_derivers;
        stdio = selection.stdio;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:19911d2z7dxrhn0bagj74iq1q1hvhg97kal536vngabm3b8njcng";
        package = "packages/ppxlib/ppxlib.0.12.0";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "0hiciacp34zxm9lhgdlx8rf3h2w5j3w236bj31rpfl4k7fdjqmkb";
        url = "https://github.com/ocaml-ppx/ppxlib/archive/0.12.0.tar.gz";
      };
      version = "0.12.0";
    };
    re = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10m5h5myw3pnjvk7z1j7hhx18zpbm7kad2196ljgvj7y169zba61";
        package = "packages/re/re.1.9.0";
      };
      pname = "re";
      src = pkgs.fetchurl 
      {
        sha256 = "1gas4ky49zgxph3870nffzkr6y41kkpqp4nj38pz1gh49zcf12aj";
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.9.0/re-1.9.0.tbz";
      };
      version = "1.9.0";
    };
    react = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wk5i83r2hxz1r1skkhzz8rild68m4g9i9blxigbg9r60hgw18z5";
        package = "packages/react/react.1.2.1";
      };
      pname = "react";
      src = pkgs.fetchurl 
      {
        sha256 = "1aj8w79gdd9xnrbz7s5p8glcb4pmimi8jp9f439dqnf6ih3mqb3v";
        url = "http://erratique.ch/software/react/releases/react-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    reason = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        menhir = selection.menhir;
        merlin-extend = selection.merlin-extend;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0kib0y71mb1l8vmj77m02fb0jl8rn58bs51z1cql6l1fj6317dld";
        package = "packages/reason/reason.3.5.2";
      };
      pname = "reason";
      src = pkgs.fetchurl 
      {
        sha256 = "1f718s0kpy2g9krlrrgsajf8y40xan9bjcmr0xkrqih97yzn3iyh";
        url = "https://registry.npmjs.org/@esy-ocaml/reason/-/reason-3.5.2.tgz";
      };
      version = "3.5.2";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:159gmr00z6jmpxvk83vnv738ls4kbzfn8p5042i87m6p8damaxhc";
        package = "packages/result/result.1.4";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "1cjlncnzkwc6zr4v8dgy8nin490blbyxzwwp0qh0cla7s3q2jw0n";
        url = "https://github.com/janestreet/result/archive/1.4.tar.gz";
      };
      version = "1.4";
    };
    rresult = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10vaq82rzip2rn1rbq27pjckvqassjh1n58pnsypldqaahxnbca6";
        package = "packages/rresult/rresult.0.6.0";
      };
      pname = "rresult";
      src = pkgs.fetchurl 
      {
        sha256 = "1k69a3gvrk7f2cshwjzvk7818f0bwxhacgd14wxy6d4gmrggci86";
        url = "http://erratique.ch/software/rresult/releases/rresult-0.6.0.tbz";
      };
      version = "0.6.0";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jvzjhd83ik7siqhjfsrvx9vbbcq5qykix7621nmyh0c40kpghgi";
        package = "packages/sexplib0/sexplib0.v0.13.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "08g0w2gnn682c6a82d22b4yv70j7i2vgk0z5imca6nly3ddgdhj3";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/sexplib0-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    stdio = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0b3xwxyifn8kg3lfp568s9n7c15mkg74p4clx169xaj16q9gnh60";
        package = "packages/stdio/stdio.v0.13.0";
      };
      pname = "stdio";
      src = pkgs.fetchurl 
      {
        sha256 = "0bb60kb027nfdh5ah76nwy0q3zcdsqydglly61kx7a12yjlcgvwm";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/stdio-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0l6bfv426xb77qfiv880yy8dcscb2hi5703n9dj32fa3mlxnbg42";
        package = "packages/stdlib-shims/stdlib-shims.0.1.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1jv6yb47f66239m7hsz7zzw3i48mjpbvfgpszws48apqx63wjwsk";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.1.0/stdlib-shims-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0xwbkf7mwwh10s3y2v6badjzcsjz7vzx22rc37dvfd77vgw03vdg";
        package = "packages/topkg/topkg.1.0.1";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "18ysdrd665mhvzqp3s86kymkd1vl6qm7kakzda1h6mr4mnkawi00";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    utop = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        camomile = selection.camomile;
        cppo = selection.cppo;
        dune = selection.dune;
        lambda-term = selection.lambda-term;
        lwt = selection.lwt;
        lwt_react = selection.lwt_react;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        react = selection.react;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0xf9syvwg2mnb7lafghl19dkbydrgqak4xvkrpgaw2ng7nzqmhm2";
        package = "packages/utop/utop.2.4.3";
      };
      pname = "utop";
      src = pkgs.fetchurl 
      {
        sha256 = "107al0l3x4a5kkjka7glmhsqlm7pwzzc6shspiv5gsjb49pblc2f";
        url = "https://github.com/ocaml-community/utop/releases/download/2.4.3/utop-2.4.3.tbz";
      };
      version = "2.4.3";
    };
    variantslib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1q9q9gr7923ckk386y7ixdwp4p95kv75mymiifsxwpvrxjzxih3w";
        package = "packages/variantslib/variantslib.v0.13.0";
      };
      pname = "variantslib";
      src = pkgs.fetchurl 
      {
        sha256 = "1d4q4awxa5gyy26d9mh45083av3xgdpzvfiyad13r31r4l2r5gvf";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/variantslib-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    yojson = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        biniou = selection.biniou;
        cppo = selection.cppo;
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vxmg1yiwh1wgxwwqzfrvaaff4wxanakq2yap1s2x3h54fqakkza";
        package = "packages/yojson/yojson.1.7.0";
      };
      pname = "yojson";
      src = pkgs.fetchurl 
      {
        sha256 = "1iich6323npvvs8r50lkr4pxxqm9mf6w67cnid7jg1j1g5gwcvv5";
        url = "https://github.com/ocaml-community/yojson/releases/download/1.7.0/yojson-1.7.0.tbz";
      };
      version = "1.7.0";
    };
    zed = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        camomile = selection.camomile;
        charInfo_width = selection.charInfo_width;
        dune = selection.dune;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1kgy7z57s4f45i56xc88dg2r7fayvl9d5li3fcj7gfvzpk8ls63c";
        package = "packages/zed/zed.2.0.5";
      };
      pname = "zed";
      src = pkgs.fetchurl 
      {
        sha256 = "0yjifjy0dyk3893kvj5dd0qpdpa4gii6n2dwr1lfbcl94f00p85k";
        url = "https://github.com/ocaml-community/zed/releases/download/2.0.5/zed-2.0.5.tbz";
      };
      version = "2.0.5";
    };
  };
}

